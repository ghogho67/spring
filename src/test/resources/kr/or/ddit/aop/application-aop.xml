<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- @Controller, @service, @Respository, @Component 4가지 이노테이션이 붙은 클래스를 스프링 빈으로 등록 -->	
	<context:component-scan base-package="kr.or.ddit.board,kr.or.ddit.aop"/>
	<context:annotation-config/>
	
	<!-- 공통의 관심사항 -->
	<bean id="loggingAspect" class="kr.or.ddit.aop.LoggingAspect"/>
	<bean id="ProfilingAspect" class="kr.or.ddit.aop.ProfilingAspect"/>
	<!-- 공통의 관심사항 : profilingAspect - service 클래스의 메소드들이 실행될때 메소드의 실행 시간을 구한다. -->
	
	
	
	
	<!-- aop:config aop설정 -->
	<aop:config>
		<!-- 프린트컷 expression 예제 
			kr.or.ddit.user.service
			kr.or.ddit.board.service
			kr.or.ddit.board.manget.service
			kr.or.ddit.board.member.service
			
			실습 :
			모든 서비스 메소드에 대해서 loggingApect를 적용하고자 한다.
			서비스 메소드는 "Service
					점두개는 사이에 몇개가 있는지모르니깐 .. 으로 표현 
					kr.or.ddit 라는 패키지 안에 service에 해당하는데 service 앞에 ..은 더많은 패키지가 있을수도있으니깐
					결국 service 로 끝나는 패키지 안에 모든 메서드 에 인자값은 몇개든 상관없는거
			앞에별이 메소드 반환타입(*하고 띄어쓰기 꼭필요) * kr.or.ddit..service.*.*(..)
		-->
			<!-- execution : 접근제어자(생략이가능.spring public) public 명시 또는 생략
							반환타입-패키지-클래스-메소드-메소드인자 -->
<!-- 		<aop:pointcut expression="execution(* kr.or.ddit..service.*.*(..))" id="target"/> -->
		<aop:pointcut id="target" expression="within(kr.or.ddit..service.*)" />
		
		<aop:aspect ref="loggingAspect">
			<aop:before pointcut-ref="target" method="before" />
			<aop:after pointcut-ref="target" method="after"/>
			<aop:around pointcut-ref="target" method="around"/>
		</aop:aspect>
		
		<aop:aspect ref="ProfilingAspect">
			<aop:around pointcut-ref="target" method="around"/>
		</aop:aspect>
		
	</aop:config>
	


</beans>
