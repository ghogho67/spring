<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
	
	<!-- scan 어떤거 더 받을지 추가 한다. 지금은 @controlleradvice를 더 추가할려한다.-->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false"> <!-- 디폴트 필터를 껏기 때문에 자동으로 잡아주진않는다. -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>	
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>	
	</context:component-scan>
	<!-- 여기서 할것은 view에 대한 설정을 할것이다. 먼저 namespaces mvc를 추가한다.  -->
	
	<!-- 이노테이션 인식 -->
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
	<!-- 복수개의 viuewResolver를 사용할 경우 우선순위를 가장 늦게 배정 
			viewName이 유효한지(존재하는지)와 관계없이 무조건처리 -->
	
	<!-- controller에서 리턴을 하는 view이름과 동일한 Spring bean이 존재하면 해당 view에 위임 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1"></property>
	</bean>
	
	<!-- 
		ex: controller.method 가 "user/user" viewName을 리턴
		1. 우선순위에 따라 beanNameViewResolver가 "user/user"와 동일한 spring bean 있는 지 확인 :없음확인
		2. 후순 우선순위에 따라 internaResourceViewResolver가 prefix + "user/user" + surffix 로 forward
		
		ex: controller.method 가 "jsonView" viewName을 리턴
		1. 	우선순위에 따라 beanNameViewResolver가 "jsonView"와 동일한 spring bean 있는 지 확인 :있음
		2. 해당 springBean(view)에게 응답을 생성하도록 요청
		
		ex: controller.method 가 "profileView" viewName을 리턴
		1. 	우선순위에 따라 beanNameViewResolver가 "profileView"와 동일한 spring bean 있는 지 확인 :있음
		2. 해당 springBean(view)에게 응답을 생성하도록 요청
	 -->
	
	
	
	<!-- controller에서 model객체에 넣은 속성을 이용하여 json으로 만들어주는 view
		 응답을 json으로 만들어주는 view  -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	<!-- profile 이미지를 처리해주는 view -->
	<bean id="profileView" class="kr.or.ddit.view.ProfileView" ></bean>
	
	<!-- 사용자 엑셀 정보를 처리해주는 view -->
	<bean id="userExcelView" class="kr.or.ddit.view.ExcelDownloadView" ></bean>
	
	<!-- viewResolver 설정 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/> <!-- 접두 -->
		<property name="suffix" value=".jsp"/> <!-- 접미 -->
		<property name="order" value="1"/>
	</bean>
	
	
	
	
	<!-- multipart resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSizePerFile" value="3145728"></property> <!-- 3메가 -->
		<property name="maxUploadSize" value="15728640"></property> <!--  -->
	</bean>
	
	<!-- messageSource -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:kr/or/ddit/msg/error</value>
			</list>
		</property>
	</bean>
	

</beans>
